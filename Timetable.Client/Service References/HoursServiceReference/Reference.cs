//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Timetable.Client.HoursServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HoursServiceReference.IHourService")]
    public interface IHourService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHourService/GetAllHours", ReplyAction="http://tempuri.org/IHourService/GetAllHoursResponse")]
        Timetable.DAL.Model.hours[] GetAllHours();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHourService/GetAllHours", ReplyAction="http://tempuri.org/IHourService/GetAllHoursResponse")]
        System.Threading.Tasks.Task<Timetable.DAL.Model.hours[]> GetAllHoursAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHourServiceChannel : Timetable.Client.HoursServiceReference.IHourService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HourServiceClient : System.ServiceModel.ClientBase<Timetable.Client.HoursServiceReference.IHourService>, Timetable.Client.HoursServiceReference.IHourService {
        
        public HourServiceClient() {
        }
        
        public HourServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HourServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HourServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HourServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Timetable.DAL.Model.hours[] GetAllHours() {
            return base.Channel.GetAllHours();
        }
        
        public System.Threading.Tasks.Task<Timetable.DAL.Model.hours[]> GetAllHoursAsync() {
            return base.Channel.GetAllHoursAsync();
        }
    }
}
